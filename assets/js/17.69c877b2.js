(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{334:function(t,s,a){"use strict";a.r(s);var e=a(44),o=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("h3",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化git仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将改动添加到索引区域")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送给远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉远程仓库代码并合并(fetch + merge)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分支并切换过去")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分支合并")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分支合并")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 commit 记录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看历史命令")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前状态")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存当前的本地修改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看缓存的本地修改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取出缓存的本地修改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若我们git add 一个文件，通过该命令可以取消该文件的追踪")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# a文件若缓存区有缓存。当我们工作目录中修改a的内容，可以使用该命令删除我们的更改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销一个commit，HEAD^^为撤销两个")]),t._v("\n")])])]),a("h3",{attrs:{id:"分支合并"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支合并"}},[t._v("#")]),t._v(" 分支合并")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://backlog.com/git-tutorial/cn/stepup/stepup1_4.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)])]),t._v(" "),a("h5",{attrs:{id:"git-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[t._v("#")]),t._v(" git merge")]),t._v(" "),a("p",[t._v("如图一，当我们处于"),a("code",[t._v("master")]),t._v("分支使用"),a("code",[t._v("git merge test")]),t._v("时，这种合并称之为"),a("code",[t._v("fast-forward")]),t._v("（快进）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://backlog.com/git-tutorial/cn/img/post/stepup/capture_stepup1_4_1.png",alt:"fast-forward"}})]),t._v(" "),a("p",[t._v("它的结果如图二所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://backlog.com/git-tutorial/cn/img/post/stepup/capture_stepup1_4_2.png",alt:"fast-forward合并"}})]),t._v(" "),a("p",[t._v("不过图三这种才是大部分情况可能的场景，我们通常从某个分支中新建一个"),a("code",[t._v("test")]),t._v("分支，而之后"),a("code",[t._v("master")]),t._v("分支可能已经被其他人更新过了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://backlog.com/git-tutorial/cn/img/post/stepup/capture_stepup1_4_3.png",alt:"分支合并"}})]),t._v(" "),a("p",[t._v("此时当我们在"),a("code",[t._v("master")]),t._v("分支使用"),a("code",[t._v("git merge test")]),t._v("，会产生一个新的分支。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://backlog.com/git-tutorial/cn/img/post/stepup/capture_stepup1_4_4.png",alt:"分支合并结果"}})]),t._v(" "),a("h5",{attrs:{id:"git-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("git merge")]),t._v("的好处是保持了原先的"),a("code",[t._v("commit")]),t._v("记录，但是历史记录会很复杂；而"),a("code",[t._v("git rebase")]),t._v("的好处是历史记录简单，但是会修改原先的"),a("code",[t._v("commit")]),t._v("记录。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://backlog.com/git-tutorial/cn/img/post/stepup/capture_stepup1_4_6.png",alt:"git-rebase"}})]),t._v(" "),a("p",[t._v("我们处于"),a("code",[t._v("master")]),t._v("分支时使用"),a("code",[t._v("git rebase test")]),t._v("来合并分支，结果如图二：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://backlog.com/git-tutorial/cn/img/post/stepup/capture_stepup1_4_7.png",alt:"git-rebase结果"}})]),t._v(" "),a("h3",{attrs:{id:"版本回退和前进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回退和前进"}},[t._v("#")]),t._v(" 版本回退和前进")]),t._v(" "),a("p",[t._v("通常我们使用"),a("code",[t._v("git reset --hard <commitID>")]),t._v("来实现对版本的控制")]),t._v(" "),a("h5",{attrs:{id:"版本回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard Head^ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到上个commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard Head^^ "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到上上个commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commitID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回退到某个具体commit")]),t._v("\n")])])]),a("h5",{attrs:{id:"版本前进"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本前进"}},[t._v("#")]),t._v(" 版本前进")]),t._v(" "),a("p",[t._v("有的时候当我们回退了版本之后，又希望恢复到之前的版本，这时候我们就需要知道原先的"),a("code",[t._v("commitID")]),t._v("，比如我们可以使用"),a("code",[t._v("git reflog")]),t._v("来查看历史命令，以及当时所处在的"),a("code",[t._v("commitID")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commitID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 前进到某个具体commit")]),t._v("\n")])])]),a("h3",{attrs:{id:"合并commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并commit"}},[t._v("#")]),t._v(" 合并Commit")]),t._v(" "),a("p",[t._v("很多时候我们会提交很多次"),a("code",[t._v("commit")]),t._v("，显得十分的杂乱，这时候可以使用"),a("code",[t._v("git rebase -i")]),t._v("来合并"),a("code",[t._v("commit")]),t._v("记录，实现美化的效果。")]),t._v(" "),a("p",[t._v("比如，我们现在分别有"),a("code",[t._v("A -> B -> C -> D -> E")]),t._v("这五个"),a("code",[t._v("commit")]),t._v("记录，我们希望把"),a("code",[t._v("C、D、E")]),t._v("合并成一个记录：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_B"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("然后会出现可编辑的页面")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_C"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 我是commitC的message\npick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_D"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 我是commitD的message\npick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_E"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 我是commitE的message\n")])])]),a("p",[t._v("我们可以把"),a("code",[t._v("commit_D")]),t._v("和"),a("code",[t._v("commit_E")]),t._v("的"),a("code",[t._v("pick")]),t._v("改成"),a("code",[t._v("squash")]),t._v("，再保存就会把这三个"),a("code",[t._v("commit")]),t._v("合并成一个新的"),a("code",[t._v("commit")]),t._v("，并在下一步可以手动更改新的"),a("code",[t._v("commit")]),t._v("的"),a("code",[t._v("message")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"git原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git原理"}},[t._v("#")]),t._v(" git原理")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/96631135",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("code",[t._v("commit")]),t._v("节点通过"),a("code",[t._v("tree")]),t._v("节点记录着某个时刻对应的文件信息，这些对应的文件保存在索引区域中（严格来说，这些文件被当作"),a("code",[t._v("object")]),t._v("节点存于"),a("code",[t._v("git")]),t._v("仓库中，索引指向着这些文件），当我们切换到某个"),a("code",[t._v("commit")]),t._v("时，会根据索引把对应的文件同步到工作目录中。")]),t._v(" "),a("p",[t._v("通常当我们修改工作目录中的文件后，通过"),a("code",[t._v("git add")]),t._v("把更新同步到索引中（即在"),a("code",[t._v("git")]),t._v("仓库中创建一个新的"),a("code",[t._v("object")]),t._v("结点，并更新索引的指向），然后使用"),a("code",[t._v("git commit")]),t._v("来生成一个新的"),a("code",[t._v("commit")]),t._v("节点（即先根据索引的指向生成一个"),a("code",[t._v("tree")]),t._v("节点，再生成"),a("code",[t._v("commit")]),t._v("节点），新的"),a("code",[t._v("commit")]),t._v("节点记录着新的文件信息。")]),t._v(" "),a("p",[t._v("假设"),a("code",[t._v("commitA")]),t._v("和"),a("code",[t._v("commitB")]),t._v("都记录着文件"),a("code",[t._v("test")]),t._v("，那么当我们处于"),a("code",[t._v("commitA")]),t._v("时并修改工作目录的文件后，或者已经同步到索引区域，只要还没有提交记录的话，这时候如果我们切换到"),a("code",[t._v("commitB")]),t._v("，那我们的本地修改会同步到"),a("code",[t._v("commitB")]),t._v("当中。")]),t._v(" "),a("p",[t._v("不过，如果我们在"),a("code",[t._v("commitA")]),t._v("记录着文件"),a("code",[t._v("a")]),t._v("，而"),a("code",[t._v("commitB")]),t._v("中不存在文件"),a("code",[t._v("a")]),t._v("，然后我们处于"),a("code",[t._v("commitA")]),t._v("时修改文件"),a("code",[t._v("a")]),t._v("，这时候直接切换到"),a("code",[t._v("commitB")]),t._v("就会失败，并且会提醒我们应该先提交我们的修改，或者可以使用"),a("code",[t._v("git stash")]),t._v("来把我们的修改暂存到"),a("code",[t._v("commitA")]),t._v("中。")]),t._v(" "),a("p",[t._v("比如我们可以先使用"),a("code",[t._v("git stash")]),t._v("暂存修改，然后就可以直接切换到"),a("code",[t._v("commitB")]),t._v("了，未来回到"),a("code",[t._v("commitA")]),t._v("时又可以使用"),a("code",[t._v("git stash pop")]),t._v("把暂存的修改内容拿出来。")]),t._v(" "),a("h5",{attrs:{id:"git-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-object"}},[t._v("#")]),t._v(" git object")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示所有object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" .git/objects/\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("/ ea/ 1c/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". /info /pack\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看object类型/值，常见类型：blob(git add 后创建), tree和commit(git commit 后创建)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -t 58c9 \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -p 58c9 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 58c9为想找的object的值")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=o.exports}}]);